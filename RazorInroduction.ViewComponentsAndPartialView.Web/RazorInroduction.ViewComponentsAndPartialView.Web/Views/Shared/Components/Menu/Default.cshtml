@using RazorInroduction.ViewComponentsAndPartialView.Web.Models.ViewModels
@model MenuViewModel



@if (Model.Menu is not null)
{
    <style type="text/css">

        /* ============ desktop view ============ */
        @@media all and (min-width: 992px) {

            .dropdown-menu li {
                position: relative;
            }

            .dropdown-menu .submenu {
                display: none;
                position: absolute;
                left: 100%;
                top: -7px;
            }

            .dropdown-menu .submenu-left {
                right: 100%;
                left: auto;
            }

            .dropdown-menu > li:hover {
                background-color: #f1f1f1
            }

                .dropdown-menu > li:hover > .submenu {
                    display: block;
                }
        }
        /* ============ desktop view .end// ============ */

        /* ============ small devices ============ */
        @@media (max-width: 991px) {

            .dropdown-menu .dropdown-menu {
                margin-left: 0.7rem;
                margin-right: 0.7rem;
                margin-bottom: .5rem;
            }
        }
        /* ============ small devices .end// ============ */

    </style>
    <script type="text/javascript">
        //	window.addEventListener("resize", function() {
        //		"use strict"; window.location.reload();
        //	});


        document.addEventListener("DOMContentLoaded", function () {


            /////// Prevent closing from click inside dropdown
            document.querySelectorAll('.dropdown-menu').forEach(function (element) {
                element.addEventListener('click', function (e) {
                    e.stopPropagation();
                });
            })



            // make it as accordion for smaller screens
            if (window.innerWidth < 992) {

                // close all inner dropdowns when parent is closed
                document.querySelectorAll('.navbar .dropdown').forEach(function (everydropdown) {
                    everydropdown.addEventListener('hidden.bs.dropdown', function () {
                        // after dropdown is hidden, then find all submenus
                        this.querySelectorAll('.submenu').forEach(function (everysubmenu) {
                            // hide every submenu as well
                            everysubmenu.style.display = 'none';
                        });
                    })
                });

                document.querySelectorAll('.dropdown-menu a').forEach(function (element) {
                    element.addEventListener('click', function (e) {

                        let nextEl = this.nextElementSibling;
                        if (nextEl && nextEl.classList.contains('submenu')) {
                            // prevent opening link if link needs to open dropdown
                            e.preventDefault();
                            console.log(nextEl);
                            if (nextEl.style.display == 'block') {
                                nextEl.style.display = 'none';
                            } else {
                                nextEl.style.display = 'block';
                            }

                        }
                    });
                })
            }
            // end if innerWidth

        });
                                                                // DOMContentLoaded  end
    </script>

    <nav class="navbar navbar-expand-lg navbar-dark bg-@Model.Color?.Primary">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">@Model.Menu.Type</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#main_nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="main_nav">
                <ul class="navbar-nav">
                    @foreach (var menuItem in Model.Menu.MenuItems)
                    {
                        <li class="nav-item dropdown">
                            <a class=" nav-link dropdown-toggle" href="#" data-bs-toggle="dropdown">
                                @menuItem.Name
                            </a>
                            @if (menuItem.MenuSubItems is not null)
                            {
                                <ul class="dropdown-menu">
                                    @foreach (var menuSubItem in menuItem.MenuSubItems)
                                    {
                                        <li>
                                            <a class="dropdown-item" href="@menuSubItem.Href">@menuSubItem.Name </a>
                                        </li>
                                    }
                                </ul>
                            }
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
}


